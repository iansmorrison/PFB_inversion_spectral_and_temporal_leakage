function output = PFBchannelizerCSIRO(input,Nchan,OS_Nu,OS_De)
%
% Takes as input a data file generated by "gen_test_vector.m".
% Assumes one polarization, complex valued single-precision inputs.
% Passes the input through the PFB and stores the output of all channels
% to file.
% The following PFB parameters are selectable:
%     - critically sampled or oversampled
%     - number of PFB channels
%     - oversampling factor
%     - prototype filter response (designed separately and its coefficients
%       provided in a file)
%     - only single block can be processed
%
%
% Author           Date         Comments
% ---------------  -----------  ----------------------------------------
% I. Morrison      31-Jul-2015  Original version
%
% I. Morrison      25-Oct-2015  Complex input version, using CSRIO-provided
%                               core PFB function "polyphase_analysis.m"
%
% ----------------------------------------------------------------------
 
% Number of channels in filter-bank
L = Nchan;

% OS factor numerator
Nu = OS_Nu;

% PFB type
pfb_type = 1; % 0 for critically sampled, 1 for oversampled

if pfb_type == 0
    OS = 1;
    M = L;
else
    OS = OS_Nu/OS_De;
    M = (L*OS_De)/OS_Nu;
end;
L_M = L - M; % Overlap

% PFB prototype filter
fname_pfb = 'Prototype_FIR.mat';
FiltCoefStruct = load(fname_pfb);
h = FiltCoefStruct.h;

% set input and output vector lengths
Nin = length(input);
Nout = floor(Nin/M);

% Evaluate the channel outputs
output = polyphase_analysis(input,h,L,M);

%output = out.*L;

return
end

